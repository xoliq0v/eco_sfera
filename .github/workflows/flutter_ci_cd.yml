name: Flutter CI/CD for Google Play Console

on:
  push:
    branches:
      - production  # Trigger workflow on push to the production branch
  pull_request:
    branches:
      - production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'

      - name: Install dependencies
        run: flutter pub get

      - name: Run Dart Analysis
        run: flutter analyze

      - name: Run Flutter Tests
        run: flutter test

      - name: Build AAB (Android)
        run: flutter build appbundle --release

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/production'  # Deploy only from the production branch

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Fastlane
        run: |
          gem install fastlane

      - name: Deploy to Google Play Store
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        run: |
          # Create a Fastfile if not already created
          echo 'platform :android do' > Fastfile
          echo '  desc "Deploy to Google Play"' >> Fastfile
          echo '  lane :deploy do' >> Fastfile
          echo '    supply( track: "production", aab: "../build/app/outputs/bundle/release/app-release.aab", json_key: ENV["GOOGLE_PLAY_SERVICE_ACCOUNT"] )' >> Fastfile
          echo '  end' >> Fastfile
          echo 'end' >> Fastfile
          
          # Run Fastlane to deploy
          fastlane deploy

      - name: Send Telegram Notification
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            MESSAGE="üöÄ Deployment successful! Your app has been updated in the Google Play Console."
          else
            MESSAGE="‚ùå Deployment failed! Please check the logs for details."
          fi
          
          curl -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID&text=$MESSAGE"